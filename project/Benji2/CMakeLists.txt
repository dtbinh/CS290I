cmake_minimum_required(VERSION 2.8)

PROJECT(main)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLUT REQUIRED) 
FIND_PACKAGE(PCL 1.7 REQUIRED)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules/")
SET(LIBFREENECT_LIBRARIES "/usr/lib/libfreenect.so")

FIND_PACKAGE(libusb-1.0 REQUIRED)

INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIRS} ${GLUT_INCLUDE_DIRS} ${PCL_INCLUDE_DIRS} ${LIBUSB_1_INCLUDE_DIR})

LINK_DIRECTORIES(${PCL_LIBRARY_DIRS})

ADD_DEFINITIONS(${PCL_DEFINITIONS})

SET(MySources 
	kinect.cpp 
	primitives.cpp   
	${CMAKE_CURRENT_SOURCE_DIR}/common/shader.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/common/shader.hpp
	${CMAKE_CURRENT_SOURCE_DIR}/common/texture.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/common/texture.hpp
	${CMAKE_CURRENT_SOURCE_DIR}/common/controls.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/common/controls.hpp
	shaders/Particle.fragmentshader
	shaders/Particle.vertexshader
)

ADD_EXECUTABLE( main ${MySources} )

#SOURCE_GROUP(common REGULAR_EXPRESSION ".*/./common/.*")
#SOURCE_GROUP(shaders REGULAR_EXPRESSION ".*/.shader$*")

TARGET_LINK_LIBRARIES( main ${OPENGL_LIBRARIES} ${GLUT_LIBRARY} ${PCL_LIBRARIES} ${LIBFREENECT_LIBRARIES})

#SET_SOURCE_FILES_PROPERTIES(${MySources} PROPERTIES LANGUAGE CXX )
